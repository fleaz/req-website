QuickStart:
  other: '了解更多'
CardTitle1:
  other: '简单而强大'
CardDesc1:
  other: '简单易用，提供请求级别和客户端级别的丰富设置，且全是可链式调用的方法'
CardTitle2:
  other: '易于调试'
CardDesc2:
  other: '提供强大且便捷的调试能力，包含 Debug 日志，性能追踪与分析，甚至将完整请求和响应内容 dump 下来'
CardTitle3:
  other: '测试 API 很容易'
CardDesc3:
  other: '可以用最少的代码进行 API 测试，不需要显式创建任何 Request 和 Client，甚至不需要处理错误'
CardTitle4:
  other: '默认就很智能'
CardDesc4:
  other: '嗅探并自动解码成 UTF-8 以避免乱码'
CardDesc44:
  other: '，根据 Content-Type 自动 Marshal 请求体和 Unmarshal 响应体'
CardTitle5:
  other: '支持 HTTP2'
CardDesc5:
  other: '同时支持 HTTP/2 和 HTTP/1.1, 如果服务端支持默认会使用 HTTP/2，当然如果需要也可以强制指定协议版本'
CardTitle6:
  other: '支持自动重试'
CardDesc6:
  other: '支持请求自动重试，并且完全可自定义'
CardTitle7:
  other: '上传下载很容易'
CardDesc7:
  other: '用很简单的设置就可以轻松进行上传和下载，甚至还支持设置回调来显示进度'
CardTitle8:
  other: '可导出'
CardDesc8:
  other: "req 的 Transport 是可导出的, 它支持 dump 请求内容，可以很容易与已有的 http.Client 集成，能以最少的代码改动获得 API 调试能力"
CardTitle9:
  other: '可扩展'
CardDesc9:
  other: '支持请求和响应的中间件'
Debugging:
  other: '调试'
QuickHTTPTest:
  other: 'HTTP 快速测试'
AutoDecode:
  other: '自动解码'
ForceHttpVersion:
  other: '强制指定 HTTP 协议'
Retry:
  other: '自动重试'
Download:
  other: '下载'
Upload:
  other: '上传'
Middlewares:
  other: '请求和响应中间件'
See:
  other: '参考'
And:
  other: '和'
